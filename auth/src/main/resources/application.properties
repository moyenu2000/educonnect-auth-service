# Auth Service Configuration
spring.application.name=auth-service

# Server Configuration
server.port=8081
server.servlet.context-path=/api/v1

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/educonnect?currentSchema=auth&serverTimezone=Asia/Dhaka}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:educonnect}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:educonnect123}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hikari Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${HIKARI_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1800000}
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=${HIKARI_VALIDATION_TIMEOUT:5000}
spring.datasource.hikari.leak-detection-threshold=${HIKARI_LEAK_DETECTION:60000}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Dhaka

# Redis Configuration
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.timeout=${SPRING_DATA_REDIS_TIMEOUT:2000ms}
spring.data.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE:8}
spring.data.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE:8}
spring.data.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE:0}
spring.data.redis.lettuce.pool.max-wait=${REDIS_POOL_MAX_WAIT:-1ms}

# RabbitMQ Configuration
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:educonnect}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:educonnect123}

# Mail Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=healthhubjavafest@gmail.com
spring.mail.password=dydvxmkgfbhmajlv
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile

# JWT Configuration
app.jwt.secret=${JWT_SECRET:dGhpcyBpcyBhIHZlcnkgc2VjdXJlIHNlY3JldCBrZXkgZm9yIGp3dCB0b2tlbiBnZW5lcmF0aW9uIHdoaWNoIHNob3VsZCBiZSBjaGFuZ2VkIGluIHByb2R1Y3Rpb24=}
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

# Application Configuration
app.base-url=${APP_BASE_URL:http://${VM_IP:localhost}:8081}
app.auth.tokenSecret=${JWT_SECRET:dGhpcyBpcyBhIHZlcnkgc2VjdXJlIHNlY3JldCBrZXkgZm9yIGp3dCB0b2tlbiBnZW5lcmF0aW9uIHdoaWNoIHNob3VsZCBiZSBjaGFuZ2VkIGluIHByb2R1Y3Rpb24=}
app.auth.tokenExpirationMsec=864000000
app.oauth2.authorizedRedirectUris=${FRONTEND_URL:http://${VM_IP:localhost}:3000}/oauth2/redirect,myandroidapp://oauth2/redirect,myiosapp://oauth2/redirect

# 2FA Configuration
two-factor.issuer=Learning Platform
two-factor.qr-code.width=200
two-factor.qr-code.height=200

# CORS Configuration
cors.allowed-origins=http://${VM_IP:localhost}:3000,http://${VM_IP:localhost}:8080,http://localhost:3000,http://localhost:8080,http://35.188.75.223:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.exposed-headers=Authorization
cors.allow-credentials=true
cors.max-age=3600

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.health.db.enabled=true
management.health.redis.enabled=true
management.health.rabbit.enabled=${MANAGEMENT_HEALTH_RABBIT_ENABLED:false}
management.health.mail.enabled=${MANAGEMENT_HEALTH_MAIL_ENABLED:false}

# Docker-specific configurations (when SPRING_PROFILES_ACTIVE=docker)
# spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/learning_platform}
# spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}

# Logging
logging.level.com.learningplatform=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=${SECURITY_LOG_LEVEL:INFO}
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:ERROR}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${SQL_BINDER_LOG_LEVEL:ERROR}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n