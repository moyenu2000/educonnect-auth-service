version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: educonnect-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=educonnect
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - educonnect-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d educonnect"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: educonnect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - educonnect-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Auth Service
  auth-service:
    image: ${DOCKER_HUB_USERNAME}/auth-service:latest
    container_name: educonnect-auth-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - APP_BASE_URL=${APP_BASE_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - SERVER_SERVLET_CONTEXT_PATH=/api/v1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - educonnect-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Discussion Service
  discussion-service:
    image: ${DOCKER_HUB_USERNAME}/discussion-service:latest
    container_name: educonnect-discussion-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_SERVLET_CONTEXT_PATH=/api/v1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - educonnect-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Assessment Service
  assessment-service:
    image: ${DOCKER_HUB_USERNAME}/assessment-service:latest
    container_name: educonnect-assessment-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_SERVLET_CONTEXT_PATH=/api/v1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      discussion-service:
        condition: service_healthy
    networks:
      - educonnect-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

networks:
  educonnect-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
