services:
  # Database Services
  postgres:
    image: postgres:15
    container_name: educonnect-postgres
    environment:
      POSTGRES_DB: educonnect
      POSTGRES_USER: ${DB_USER:-educonnect}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - educonnect-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: educonnect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - educonnect-network
    restart: unless-stopped

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: educonnect-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-educonnect}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - educonnect-network
    restart: unless-stopped

  # Auth Service
  auth-service:
    build: 
      context: ./auth
      dockerfile: Dockerfile
    container_name: educonnect-auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_SERVLET_CONTEXT_PATH=/api/v1
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/educonnect
      - SPRING_DATASOURCE_USERNAME=${DB_USER:-educonnect}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER:-educonnect}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - APP_BASE_URL=http://auth-service:8081
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - educonnect-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3


  # Discussion Service
  discussion-service:
    build: 
      context: ./discussion-service
      dockerfile: Dockerfile
    container_name: educonnect-discussion-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/educonnect
      - SPRING_DATASOURCE_USERNAME=${DB_USER:-educonnect}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER:-educonnect}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - AUTH_SERVICE_URL=http://auth-service:8081
      - ASSESSMENT_SERVICE_URL=http://assessment-service:8083
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - auth-service
    networks:
      - educonnect-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Assessment Service
  assessment-service:
    build: 
      context: ./assessment-service
      dockerfile: Dockerfile
    container_name: educonnect-assessment-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/educonnect
      - SPRING_DATASOURCE_USERNAME=${DB_USER:-educonnect}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER:-educonnect}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - AUTH_SERVICE_URL=http://auth-service:8081
      - DISCUSSION_SERVICE_URL=http://discussion-service:8082
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - auth-service
      - discussion-service
    networks:
      - educonnect-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway (Optional - for production) - COMMENTED OUT
  # api-gateway:
  #   image: nginx:alpine
  #   container_name: educonnect-api-gateway
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - auth-service
  #     - discussion-service
  #     - assessment-service
  #   networks:
  #     - educonnect-network
  #   restart: unless-stopped

  # Monitoring Services (Optional) - COMMENTED OUT
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: educonnect-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   networks:
  #     - educonnect-network
  #   restart: unless-stopped

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: educonnect-grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   networks:
  #     - educonnect-network
  #   restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  educonnect-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
