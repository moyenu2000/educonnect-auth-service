{
  "info": {
    "title": "EduConnect Discussion Service API",
    "version": "1.0.0",
    "baseUrl": "http://34.68.47.215:8083/api/v1",
    "port": 8083,
    "description": "Discussion microservice for messaging, Q&A forums, group discussions, and peer-to-peer communication"
  },
  "auth": {
    "bearer": "Authorization: Bearer {access_token}",
    "publicEndpoints": [
      "GET /discussions/public",
      "GET /discussions/{discussionId}/public"
    ]
  },
  "endpoints": {
    "discussions": {
      "GET /discussions": {
        "auth": "optional",
        "params": {
          "page": "int?",
          "size": "int?",
          "type": "enum?",
          "subjectId": "int?",
          "topicId": "int?",
          "classLevel": "enum?",
          "sortBy": "enum?"
        },
        "response": {
          "success": "bool",
          "data": {
            "discussions": "array",
            "totalElements": "int",
            "totalPages": "int",
            "currentPage": "int"
          }
        },
        "description": "Get discussions with filtering options"
      },
      "POST /discussions": {
        "auth": "required",
        "body": {
          "title": "str",
          "content": "str",
          "type": "enum",
          "subjectId": "int?",
          "topicId": "int?",
          "classLevel": "enum?",
          "tags": "array?",
          "attachments": "array?",
          "isAnonymous": "bool?"
        },
        "response": {
          "success": "bool",
          "data": "Discussion",
          "message": "str"
        },
        "description": "Create a new discussion"
      },
      "GET /discussions/{discussionId}": {
        "auth": "optional",
        "response": {
          "success": "bool",
          "data": "Discussion"
        },
        "description": "Get a specific discussion by ID"
      },
      "PUT /discussions/{discussionId}": {
        "auth": "required",
        "body": {
          "title": "str",
          "content": "str",
          "tags": "array?",
          "attachments": "array?"
        },
        "response": {
          "success": "bool",
          "data": "Discussion",
          "message": "str"
        },
        "description": "Update a discussion (only by author)"
      },
      "DELETE /discussions/{discussionId}": {
        "auth": "required",
        "response": {
          "success": "bool",
          "message": "str"
        },
        "description": "Delete a discussion (only by author or admin)"
      },
      "POST /discussions/{discussionId}/upvote": {
        "auth": "required",
        "response": {
          "success": "bool",
          "data": {
            "upvoted": "bool",
            "upvotesCount": "int",
            "downvotesCount": "int"
          }
        },
        "description": "Upvote a discussion"
      },
      "POST /discussions/{discussionId}/downvote": {
        "auth": "required",
        "response": {
          "success": "bool",
          "data": {
            "downvoted": "bool",
            "upvotesCount": "int",
            "downvotesCount": "int"
          }
        },
        "description": "Downvote a discussion"
      },
      "POST /discussions/{discussionId}/bookmark": {
        "auth": "required",
        "response": {
          "success": "bool",
          "data": {
            "bookmarked": "bool"
          }
        },
        "description": "Bookmark/unbookmark a discussion"
      }
    },
    "answers": {
      "GET /discussions/{discussionId}/answers": {
        "auth": "optional",
        "params": {
          "page": "int?",
          "size": "int?",
          "sortBy": "enum?"
        },
        "response": {
          "success": "bool",
          "data": {
            "answers": "array",
            "totalElements": "int",
            "totalPages": "int"
          }
        },
        "description": "Get answers for a discussion"
      },
      "POST /discussions/{discussionId}/answers": {
        "auth": "required",
        "body": {
          "content": "str",
          "attachments": "array?",
          "isAnonymous": "bool?"
        },
        "response": {
          "success": "bool",
          "data": "Answer",
          "message": "str"
        },
        "description": "Add an answer to a discussion"
      },
      "PUT /answers/{answerId}": {
        "auth": "required",
        "body": {
          "content": "str",
          "attachments": "array?"
        },
        "response": {
          "success": "bool",
          "data": "Answer",
          "message": "str"
        },
        "description": "Update an answer (only by author)"
      },
      "DELETE /answers/{answerId}": {
        "auth": "required",
        "response": {
          "success": "bool",
          "message": "str"
        },
        "description": "Delete an answer (only by author or admin)"
      },
      "POST /answers/{answerId}/upvote": {
        "auth": "required",
        "response": {
          "success": "bool",
          "data": {
            "upvoted": "bool",
            "upvotesCount": "int",
            "downvotesCount": "int"
          }
        },
        "description": "Upvote an answer"
      },
      "POST /answers/{answerId}/downvote": {
        "auth": "required",
        "response": {
          "success": "bool",
          "data": {
            "downvoted": "bool",
            "upvotesCount": "int",
            "downvotesCount": "int"
          }
        },
        "description": "Downvote an answer"
      },
      "POST /answers/{answerId}/accept": {
        "auth": "required",
        "response": {
          "success": "bool",
          "data": {
            "accepted": "bool"
          }
        },
        "description": "Accept an answer as best answer (only by discussion author)"
      }
    },
    "groups": {
      "GET /groups": {
        "auth": "optional",
        "params": {
          "page": "int?",
          "size": "int?",
          "type": "enum?",
          "subjectId": "int?",
          "joined": "bool?"
        },
        "response": {
          "success": "bool",
          "data": {
            "groups": "array",
            "totalElements": "int",
            "totalPages": "int"
          }
        },
        "description": "Get groups with filtering options"
      },
      "POST /groups": {
        "auth": "required",
        "body": {
          "name": "str",
          "description": "str",
          "type": "enum",
          "subjectId": "int?",
          "classLevel": "enum?",
          "isPrivate": "bool",
          "avatarUrl": "str?",
          "rules": "str?"
        },
        "response": {
          "success": "bool",
          "data": "Group",
          "message": "str"
        },
        "description": "Create a new group"
      },
      "GET /groups/{groupId}": {
        "auth": "optional",
        "response": {
          "success": "bool",
          "data": "Group"
        },
        "description": "Get a specific group by ID"
      },
      "PUT /groups/{groupId}": {
        "auth": "required",
        "body": {
          "name": "str",
          "description": "str",
          "avatarUrl": "str?",
          "rules": "str?"
        },
        "response": {
          "success": "bool",
          "data": "Group",
          "message": "str"
        },
        "description": "Update a group (only by admin/moderator)"
      },
      "POST /groups/{groupId}/join": {
        "auth": "required",
        "response": {
          "success": "bool",
          "data": {
            "joined": "bool",
            "membersCount": "int"
          }
        },
        "description": "Join/leave a group"
      },
      "GET /groups/{groupId}/members": {
        "auth": "required",
        "params": {
          "page": "int?",
          "size": "int?",
          "role": "enum?"
        },
        "response": {
          "success": "bool",
          "data": {
            "members": "array",
            "totalElements": "int",
            "totalPages": "int"
          }
        },
        "description": "Get group members"
      },
      "PUT /groups/{groupId}/members/{userId}/role": {
        "auth": "required",
        "body": {
          "role": "enum"
        },
        "response": {
          "success": "bool",
          "message": "str"
        },
        "description": "Change member role (only by admin)"
      },
      "DELETE /groups/{groupId}/members/{userId}": {
        "auth": "required",
        "response": {
          "success": "bool",
          "message": "str"
        },
        "description": "Remove member from group (only by admin/moderator)"
      },
      "GET /groups/{groupId}/discussions": {
        "auth": "required",
        "params": {
          "page": "int?",
          "size": "int?",
          "sortBy": "enum?"
        },
        "response": {
          "success": "bool",
          "data": {
            "discussions": "array",
            "totalElements": "int",
            "totalPages": "int"
          }
        },
        "description": "Get group discussions"
      },
      "POST /groups/{groupId}/discussions": {
        "auth": "required",
        "body": {
          "title": "str",
          "content": "str",
          "tags": "array?",
          "attachments": "array?",
          "isAnonymous": "bool?"
        },
        "response": {
          "success": "bool",
          "data": "Discussion",
          "message": "str"
        },
        "description": "Create a discussion in group"
      }
    },
    "messages": {
      "GET /messages/conversations": {
        "auth": "required",
        "params": {
          "page": "int?",
          "size": "int?"
        },
        "response": {
          "success": "bool",
          "data": {
            "conversations": "array",
            "totalElements": "int",
            "totalPages": "int"
          }
        },
        "description": "Get user's conversations"
      },
      "GET /messages/conversations/{conversationId}": {
        "auth": "required",
        "params": {
          "page": "int?",
          "size": "int?",
          "before": "datetime?"
        },
        "response": {
          "success": "bool",
          "data": {
            "messages": "array",
            "totalElements": "int",
            "hasMore": "bool",
            "conversation": "Conversation"
          }
        },
        "description": "Get messages in a conversation"
      },
      "POST /messages": {
        "auth": "required",
        "body": {
          "recipientId": "int",
          "content": "str",
          "type": "enum",
          "attachments": "array?"
        },
        "response": {
          "success": "bool",
          "data": "Message",
          "message": "str"
        },
        "description": "Send a direct message"
      },
      "PUT /messages/{messageId}": {
        "auth": "required",
        "body": {
          "content": "str"
        },
        "response": {
          "success": "bool",
          "data": "Message",
          "message": "str"
        },
        "description": "Edit a message (only by sender)"
      },
      "DELETE /messages/{messageId}": {
        "auth": "required",
        "response": {
          "success": "bool",
          "message": "str"
        },
        "description": "Delete a message (only by sender)"
      },
      "PUT /messages/{messageId}/read": {
        "auth": "required",
        "response": {
          "success": "bool"
        },
        "description": "Mark message as read"
      },
      "GET /messages/unread-count": {
        "auth": "required",
        "response": {
          "success": "bool",
          "data": {
            "unreadCount": "int"
          }
        },
        "description": "Get unread messages count"
      }
    },
    "ai": {
      "POST /ai/ask": {
        "auth": "required",
        "body": {
          "question": "str",
          "subjectId": "int?",
          "topicId": "int?",
          "context": "str?",
          "type": "enum"
        },
        "response": {
          "success": "bool",
          "data": {
            "answer": "str",
            "sources": "array?",
            "confidence": "float",
            "followUpQuestions": "array?"
          }
        },
        "description": "Ask AI for help with academic questions"
      },
      "GET /ai/history": {
        "auth": "required",
        "params": {
          "page": "int?",
          "size": "int?",
          "subjectId": "int?"
        },
        "response": {
          "success": "bool",
          "data": {
            "history": "array",
            "totalElements": "int",
            "totalPages": "int"
          }
        },
        "description": "Get AI conversation history"
      }
    },
    "search": {
      "GET /search/discussions": {
        "auth": "optional",
        "params": {
          "q": "str",
          "page": "int?",
          "size": "int?",
          "subjectId": "int?",
          "type": "enum?",
          "sortBy": "enum?"
        },
        "response": {
          "success": "bool",
          "data": {
            "discussions": "array",
            "totalElements": "int",
            "totalPages": "int"
          }
        },
        "description": "Search discussions"
      },
      "GET /search/groups": {
        "auth": "optional",
        "params": {
          "q": "str",
          "page": "int?",
          "size": "int?",
          "type": "enum?"
        },
        "response": {
          "success": "bool",
          "data": {
            "groups": "array",
            "totalElements": "int",
            "totalPages": "int"
          }
        },
        "description": "Search groups"
      },
      "GET /search/users": {
        "auth": "optional",
        "params": {
          "q": "str",
          "page": "int?",
          "size": "int?"
        },
        "response": {
          "success": "bool",
          "data": {
            "users": "array",
            "totalElements": "int",
            "totalPages": "int"
          }
        },
        "description": "Search users"
      }
    },
    "notifications": {
      "GET /notifications": {
        "auth": "required",
        "params": {
          "page": "int?",
          "size": "int?",
          "type": "enum?",
          "unread": "bool?"
        },
        "response": {
          "success": "bool",
          "data": {
            "notifications": "array",
            "totalElements": "int",
            "totalPages": "int",
            "unreadCount": "int"
          }
        },
        "description": "Get user notifications"
      },
      "PUT /notifications/{notificationId}/read": {
        "auth": "required",
        "response": {
          "success": "bool"
        },
        "description": "Mark notification as read"
      },
      "PUT /notifications/read-all": {
        "auth": "required",
        "response": {
          "success": "bool"
        },
        "description": "Mark all notifications as read"
      },
      "GET /notifications/unread-count": {
        "auth": "required",
        "response": {
          "success": "bool",
          "data": {
            "unreadCount": "int"
          }
        },
        "description": "Get unread notifications count"
      }
    }
  },
  "schemas": {
    "Discussion": {
      "id": "int",
      "title": "str",
      "content": "str",
      "type": "QUESTION|HELP|GENERAL|ANNOUNCEMENT",
      "author": "User",
      "subjectId": "int?",
      "topicId": "int?",
      "classLevel": "enum?",
      "tags": "array",
      "attachments": "array",
      "isAnonymous": "bool",
      "upvotesCount": "int",
      "downvotesCount": "int",
      "answersCount": "int",
      "viewsCount": "int",
      "hasAcceptedAnswer": "bool",
      "status": "ACTIVE|CLOSED|HIDDEN",
      "createdAt": "datetime",
      "updatedAt": "datetime",
      "upvoted": "bool?",
      "downvoted": "bool?",
      "bookmarked": "bool?"
    },
    "Answer": {
      "id": "int",
      "content": "str",
      "author": "User",
      "discussionId": "int",
      "attachments": "array",
      "isAnonymous": "bool",
      "upvotesCount": "int",
      "downvotesCount": "int",
      "isAccepted": "bool",
      "createdAt": "datetime",
      "updatedAt": "datetime",
      "upvoted": "bool?",
      "downvoted": "bool?"
    },
    "Group": {
      "id": "int",
      "name": "str",
      "description": "str",
      "type": "STUDY|SUBJECT|CLASS|PROJECT|GENERAL",
      "subjectId": "int?",
      "classLevel": "enum?",
      "isPrivate": "bool",
      "avatarUrl": "str?",
      "rules": "str?",
      "membersCount": "int",
      "discussionsCount": "int",
      "createdBy": "User",
      "createdAt": "datetime",
      "updatedAt": "datetime",
      "joined": "bool?",
      "userRole": "enum?"
    },
    "GroupMember": {
      "id": "int",
      "user": "User",
      "groupId": "int",
      "role": "ADMIN|MODERATOR|MEMBER",
      "joinedAt": "datetime"
    },
    "Message": {
      "id": "int",
      "content": "str",
      "type": "TEXT|IMAGE|FILE|AUDIO|VIDEO",
      "sender": "User",
      "recipient": "User",
      "conversationId": "int",
      "attachments": "array",
      "isRead": "bool",
      "isEdited": "bool",
      "createdAt": "datetime",
      "updatedAt": "datetime"
    },
    "Conversation": {
      "id": "int",
      "participants": "array",
      "lastMessage": "Message",
      "unreadCount": "int",
      "createdAt": "datetime",
      "updatedAt": "datetime"
    },
    "AIQuery": {
      "id": "int",
      "question": "str",
      "answer": "str",
      "type": "CONCEPT|PROBLEM|EXPLANATION|HOMEWORK",
      "subjectId": "int?",
      "topicId": "int?",
      "context": "str?",
      "confidence": "float",
      "sources": "array",
      "userId": "int",
      "createdAt": "datetime"
    },
    "Notification": {
      "id": "int",
      "type": "ANSWER|UPVOTE|MENTION|GROUP_INVITE|MESSAGE|FOLLOW",
      "title": "str",
      "content": "str",
      "userId": "int",
      "relatedId": "int?",
      "relatedType": "enum?",
      "isRead": "bool",
      "createdAt": "datetime"
    },
    "MessageSendDto": {
      "recipientId": "int",
      "content": "str",
      "type": "TEXT|IMAGE|FILE|AUDIO|VIDEO",
      "attachments": "array?",
      "tempId": "str?"
    },
    "TypingDto": {
      "conversationId": "int",
      "recipientId": "int"
    },
    "TypingStatusDto": {
      "senderId": "int",
      "senderName": "str",
      "conversationId": "int",
      "isTyping": "bool"
    },
    "MessageReadDto": {
      "messageId": "int",
      "conversationId": "int"
    },
    "MessageStatusDto": {
      "messageId": "int",
      "status": "SENT|DELIVERED|READ",
      "timestamp": "datetime"
    },
    "NotificationCountDto": {
      "unreadCount": "int",
      "lastUpdated": "datetime"
    },
    "GroupDiscussionDto": {
      "title": "str",
      "content": "str",
      "tags": "array?",
      "attachments": "array?",
      "isAnonymous": "bool?"
    },
    "GroupAnswerDto": {
      "discussionId": "int",
      "content": "str",
      "attachments": "array?",
      "isAnonymous": "bool?"
    },
    "VoteDto": {
      "targetId": "int",
      "targetType": "DISCUSSION|ANSWER",
      "voteType": "UPVOTE|DOWNVOTE"
    },
    "VoteUpdateDto": {
      "targetId": "int",
      "targetType": "DISCUSSION|ANSWER",
      "upvotesCount": "int",
      "downvotesCount": "int",
      "userVote": "UPVOTE|DOWNVOTE|NONE"
    },
    "MembershipUpdateDto": {
      "userId": "int",
      "userName": "str",
      "action": "JOINED|LEFT|ROLE_CHANGED",
      "role": "ADMIN|MODERATOR|MEMBER?",
      "membersCount": "int"
    }
  },
  "enums": {
    "DiscussionType": ["QUESTION", "HELP", "GENERAL", "ANNOUNCEMENT"],
    "DiscussionStatus": ["ACTIVE", "CLOSED", "HIDDEN"],
    "GroupType": ["STUDY", "SUBJECT", "CLASS", "PROJECT", "GENERAL"],
    "GroupRole": ["ADMIN", "MODERATOR", "MEMBER"],
    "MessageType": ["TEXT", "IMAGE", "FILE", "AUDIO", "VIDEO"],
    "AIQueryType": ["CONCEPT", "PROBLEM", "EXPLANATION", "HOMEWORK"],
    "NotificationType": ["ANSWER", "UPVOTE", "MENTION", "GROUP_INVITE", "MESSAGE", "FOLLOW"],
    "ClassLevel": ["CLASS_6", "CLASS_7", "CLASS_8", "CLASS_9", "CLASS_10", "CLASS_11", "CLASS_12"],
    "SortBy": ["NEWEST", "OLDEST", "MOST_UPVOTED", "MOST_ANSWERED", "MOST_VIEWED"],
    "MessageStatus": ["SENT", "DELIVERED", "READ"],
    "VoteType": ["UPVOTE", "DOWNVOTE", "NONE"],
    "TargetType": ["DISCUSSION", "ANSWER"],
    "MembershipAction": ["JOINED", "LEFT", "ROLE_CHANGED"]
  },
  "security": {
    "rateLimits": {
      "discussions": "5/min/user",
      "answers": "10/min/user",
      "messages": "30/min/user",
      "ai-queries": "10/hour/user",
      "votes": "100/min/user"
    },
    "features": ["JWT Auth", "Real-time Messaging", "Content Moderation", "AI Integration", "File Sharing"]
  },
  "websocket": {
    "baseUrl": "ws://34.68.47.215:8083",
    "protocol": "STOMP over WebSocket with SockJS fallback",
    "authentication": "JWT token in Authorization header or connection params",
    "endpoints": {
      "/ws/messages": {
        "description": "Real-time direct messaging",
        "events": {
          "outbound": {
            "/app/messages.send": {
              "payload": "MessageSendDto",
              "description": "Send a direct message"
            },
            "/app/typing.start": {
              "payload": "TypingDto", 
              "description": "Start typing indicator"
            },
            "/app/typing.stop": {
              "payload": "TypingDto",
              "description": "Stop typing indicator"
            },
            "/app/messages.read": {
              "payload": "MessageReadDto",
              "description": "Mark message as read"
            }
          },
          "inbound": {
            "/queue/messages": {
              "payload": "MessageDto",
              "description": "Receive new messages"
            },
            "/queue/typing": {
              "payload": "TypingStatusDto",
              "description": "Receive typing indicators"
            },
            "/queue/message.status": {
              "payload": "MessageStatusDto",
              "description": "Message delivery/read receipts"
            }
          }
        }
      },
      "/ws/notifications": {
        "description": "Real-time notifications",
        "events": {
          "inbound": {
            "/queue/notifications": {
              "payload": "NotificationDto",
              "description": "Receive new notifications"
            },
            "/queue/notifications.count": {
              "payload": "NotificationCountDto",
              "description": "Unread notification count updates"
            }
          }
        }
      },
      "/ws/groups/{groupId}": {
        "description": "Real-time group discussions",
        "events": {
          "outbound": {
            "/app/groups/{groupId}/discussions.create": {
              "payload": "GroupDiscussionDto",
              "description": "Create group discussion"
            },
            "/app/groups/{groupId}/answers.create": {
              "payload": "GroupAnswerDto", 
              "description": "Add answer to group discussion"
            },
            "/app/groups/{groupId}/vote": {
              "payload": "VoteDto",
              "description": "Vote on discussion/answer"
            }
          },
          "inbound": {
            "/topic/groups/{groupId}/discussions": {
              "payload": "DiscussionDto",
              "description": "New discussions in group"
            },
            "/topic/groups/{groupId}/answers": {
              "payload": "AnswerDto",
              "description": "New answers in group"
            },
            "/topic/groups/{groupId}/votes": {
              "payload": "VoteUpdateDto",
              "description": "Vote count updates"
            },
            "/topic/groups/{groupId}/members": {
              "payload": "MembershipUpdateDto",
              "description": "Member join/leave events"
            }
          }
        }
      }
    },
    "connection": {
      "connectUrl": "/ws",
      "headers": {
        "Authorization": "Bearer {access_token}"
      },
      "heartbeat": {
        "outgoing": 10000,
        "incoming": 10000
      },
      "reconnect": {
        "enabled": true,
        "maxAttempts": 5,
        "delay": 1000
      }
    }
  },
  "integration": {
    "services": {
      "auth-service": "User authentication and profiles",
      "assessment-service": "Subject and topic data",
      "social-feed-service": "Cross-posting discussions",
      "notification-service": "Push notifications",
      "ai-service": "AI-powered Q&A assistance"
    }
  }
}
